package Search;



import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;




import tools.FrenchStemmer;
import tools.Normalizer;

public class WeightsQuery {



	public File corpus;
	public Normalizer normalizer;
	public  File index_; 
	public String query ; 
	public File weights;


	public WeightsQuery (Normalizer normalizer, File corpus , File index_ , String query , File weights)
	{
		this.normalizer = normalizer; 
		this.corpus = corpus;
		this.index_ = index_;
		this.query = query ;
		this.weights = weights ;
	}




	public void  saveWeights () throws IOException
	{	
		
		// 

		HashMap <String , Integer> tf =  new HashMap <String ,Integer> () ; 

		ArrayList<String> words = normalizer.normalize(query);
		HashSet<String> wordsInFiles = new HashSet<String>(words) ;


		if (corpus.isDirectory()) 
		{

			for (String term : wordsInFiles) {
				term =  term.toLowerCase();
				Integer value =  Collections.frequency(words, term);

				tf.put (term , value) ;

			}
			

			HashMap <String , Double> idf =  new HashMap <String ,Double> () ; 
			BufferedReader br = null ;
			br = new BufferedReader(new FileReader(index_));
			String line;
			while ((line = br.readLine()) != null)
			{
				String[] line_parts = line.split("  ");
				String term= line_parts[0];

				if(!wordsInFiles.contains(term))
					continue;

				String[] docs = line_parts[1].split(",");
				idf.put(term, 1+Math.log(corpus.listFiles().length/docs.length) );
			}
			br.close();


			HashMap <String , Double> tfidf =  new HashMap <String ,Double> () ; 
			for (String term : wordsInFiles)
			{
				tfidf.put(term ,   tf.get(term) * idf.get(term) );

				System.out.print(term + "\t " + tfidf.get(term) +"\n");
			}
		}
			 
		

	}





	public static void main(String[] args) throws IOException {


		String StopWords = "/home/anonyme/search-engine/project/data/frenchST.txt";
		File corpus = new File ("/home/anonyme/search-engine/project/data/corpus_reduit");
		Normalizer stemmerNoStopWords = new FrenchStemmer(new File(StopWords));
		Normalizer normalizer = stemmerNoStopWords;

		String path_index = "/home/anonyme/search-engine/project/result_indexation/index_stemmer";
		File index_ = new File(path_index);
		String query = " charlie hebdo  jawad charlie ";
		WeightsQuery poids = new WeightsQuery (normalizer ,corpus , index_,query);

		poids.saveWeights();
	}

}
