package Search;


import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;



import tools.Normalizer;

public class WeightsQuery {

	

	public File corpus;
	public Normalizer normalizer;
	public  File index_; 
	public String query ; 
	BufferedReader reader = null ;
	
	ArrayList<String> words = normalizer.normalize(query);
	//HashSet<String> wordInFiles = new HashSet<String>(words);

	
   reader = new BufferedReader(new FileReader(index_));
		public WeightsQuery (Normalizer normalizer, File corpus , File index_ , String query)
	{
		this.normalizer = normalizer;

		this.corpus = corpus;
		this.index_ = index_;
		this.query = query ;
	}
	
	
	
	public HashMap<String,Integer> getTerm () throws IOException
	{	
		
		
	
	
	
 HashMap <String , Integer> tf =  new HashMap <String ,Integer> () ; 

		if (corpus.isDirectory()) {
		
	 for (String term : wordInFiles) {
		 term =  term.toLowerCase();
		Integer value =  Collections.frequency(words, term);
			
		 tf.put (term , value) ;
		 
		}
	
	 }
	return tf;
	}
	 HashMap <String , Integer> idf =  new HashMap <String ,Integer> () ; 
	
	 
	 {
		
		 
		 
		 
	 }
	
	
	

	
}
