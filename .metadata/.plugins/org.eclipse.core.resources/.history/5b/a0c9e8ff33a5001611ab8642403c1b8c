package index;

import java.io.*;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.*;

import tools.Normalizer;
public class Index {


	public File corpus;
	public Normalizer normalizer;


	public Index(Normalizer normalizer, File corpus)
	{
		this.normalizer = normalizer;

		this.corpus = corpus;
	}



	public void  getIndex() throws IOException {

		for ( String term : terms)
		{
			//  Create a List of the documents and their occurences of the terms the value of tf is 
			// a hashMap (Doc,occurence)

			HashMap<String, Float> tfIdfs = new HashMap<String, Float>();
			HashMap<String, Integer> documents_tf = tf.get(term);

			for(Map.Entry<String, Integer> document_tf : documents_tf.entrySet())
			{

				String document = document_tf.getKey();
				Integer  term_Frequency = documents_tf.get(document);
				Integer Df = documents_tf.size();
				
				// truncate : for optimizing memory in the index 
				float tfIdf = Math.round(((double)term_Frequency  * Math.log((double)NumberOfDocument / (double)Df))*100.0)/100;
				tfIdfs.put(term, tfIdf);
			}
		//	System.out.print("kk");
System.out.print(tfIdfs);
		}	
	
		System.out.print("kk");

	}	
	
}