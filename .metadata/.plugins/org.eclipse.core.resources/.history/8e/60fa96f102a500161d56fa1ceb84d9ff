import java.io.*;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;

import tools.Normalizer;
import java.io.*;
import java.io.*;
public class Index {


	public File corpus;
	public Normalizer normalizer;


	public Index(Normalizer normalizer, File corpus)
	{
		this.normalizer = normalizer;

		this.corpus = corpus;
	}

	// get the occurence of each term in each document

	public void  getTndex() throws IOException {
		
		
		// Calcul of Tf (frequency terms)

		HashMap<String, HashMap<String, Integer>> tf = new HashMap<String, HashMap<String, Integer>>();
		int NumberOfDocument = 0 ;

		if (corpus.isDirectory()) {
			File [] files_corpus = corpus.listFiles();
			for (File file : files_corpus)
			{
				ArrayList<String> words = normalizer.normalize(file);
				// alphabetic order	
				HashSet<String> wordsInFile = new HashSet<String> () ;
				for(String word: wordsInFile)
				{
					word = word.toLowerCase();
					//  word is null
					if (!wordsInFile.contains(word))
					{
						HashMap<String, Integer> value = tf.get(word); 
				
						
						if(value == null) {
						
							
//The frequency(Collection<?>, Object) method is used to get the number of elements
//in the specified collection equal to the specified object.
// example: https://www.tutorialspoint.com/java/util/collections_frequency.htm
							value.put(file.getName(), Collections.frequency(words, word));
							tf.put(word,value);
						}
						
				}	
					}
						 NumberOfDocument ++ ;
		
			}		
		}
// Calcul of weights df.ifs
	}
}	

